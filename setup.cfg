[metadata]
name=aea_consensus_algorithms
author=Valory Ltd.
install_requires="aea[all]>=1.0.0,<2.0.0"
version = attr: aea_consensus_algorithms.__version__
description = Consensus algorithms implemented with the AEA framework.
long_description = file: README.md, CHANGELOG.md, LICENSE
long_description_content_type = "text/markdown"
keywords = aea autonomous-economic-agents agent-framework consensus-algorithms distributed-systems multi-agent-systems multi-agent cryptocurrency cryptocurrencies dezentralized dezentralized-network
license = Apache 2.0 License
classifiers =
    Environment :: Console
    Environment :: Web Environment
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Operating System :: MacOS
    Operating System :: Unix
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Communications
    Topic :: Internet
    Topic :: Scientific/Engineering
    Topic :: Software Development
    Topic :: System

[option.project_urls]
"Bug Reports": "https://github.com/valory-xyz/consensus-algorithms/issues"
"Source": "https://github.com/valory-xyz/consensus-algorithms"

[options]
zip_safe = False
include_package_data = True
packages = find:
scripts =
install_requires =
    aea[all]>=1.0.0,<2.0.0
python_requires= >=3.6

[options.package_data]
* = *.txt, *.md

[options.packages.find]
include =
    aea_consensus_algorithms*
exclude =

[bdist_wheel]
# we dont support py2
universal = 0

[flake8]
paths=aea,examples,packages,scripts,tests
exclude=.md,
    *_pb2.py,
    aea/__init__.py,
    aea/cli/__init__.py,
    tests/common/oef_search_pluto_scripts,
    tests/common/click_testing.py,
    scripts/oef/launch.py
max-line-length = 88
select = B,C,D,E,F,I,W,
ignore = E203,E501,W503,D202,B014,D400,D401,DAR
application-import-names = aea,packages,tests,scripts

# ignore as too restrictive for our needs:
# D400: First line should end with a period
# D401: First line should be in imperative mood
# E501: https://www.flake8rules.com/rules/E501.html (Line too long)
# E203: https://www.flake8rules.com/rules/E203.html (Whitespace)
# W503: https://www.flake8rules.com/rules/W503.html (Line break)
# D202: blank lines
# B014: redundant exception

[isort]
# for black compatibility
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
ensure_newline_before_comments = True
line_length=88
# custom configurations
order_by_type=False
case_sensitive=True
lines_after_imports=2
skip =
    tests/data/dummy_aea/vendor/
    tests/data/dummy_aea/skills/dummy
skip_glob = **/*_pb2.py
known_first_party=aea
known_packages=packages
known_local_folder=tests
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,PACKAGES,LOCALFOLDER

[mypy]
python_version = 3.7
strict_optional = True

# Before adding a module here, make sure it does not support type hints

# Per-module options for aea dir:

[mypy-aea/mail/base_pb2]
ignore_errors = True

[mypy-aea/helpers/multiaddr/crypto_pb2]
ignore_errors = True

[mypy-aea/helpers/search/models_pb2]
ignore_errors = True

[mypy-oef.*]
ignore_missing_imports = True

[mypy-semver.*]
ignore_missing_imports = True

[mypy-eth_keys.*]
ignore_missing_imports = True

[mypy-jsonschema.*]
ignore_missing_imports = True

[mypy-dotenv]
ignore_missing_imports = True

[mypy-connexion]
ignore_missing_imports = True

[mypy-eth_account.*]
ignore_missing_imports = True

[mypy-ipfshttpclient.*]
ignore_missing_imports = True

[mypy-aea/helpers/ipfs/pb/unixfs_pb2]
ignore_errors = True

[mypy-aea/helpers/ipfs/pb/merkledag_pb2]
ignore_errors = True

[mypy-win32con.*]
ignore_missing_imports = True

[mypy-win32file.*]
ignore_missing_imports = True

[mypy-pywintypes.*]
ignore_missing_imports = True

[mypy-ecdsa.*]
ignore_missing_imports = True

[mypy-urllib3.*]
ignore_missing_imports = True

[mypy-aea_ledger_fetchai.*]
ignore_missing_imports = True

[mypy-aea_ledger_ethereum.*]
ignore_missing_imports = True

[mypy-aea_ledger_cosmos.*]
ignore_missing_imports = True

# Per-module options for examples dir:

[mypy-numpy]
ignore_missing_imports = True

[mypy-gym.*]
ignore_missing_imports = True

# Per-module options for tests dir:

[mypy-pytest]
ignore_missing_imports = True

[mypy-docker.*]
ignore_missing_imports = True

[mypy-tests/data/generator/t_protocol/*]
ignore_errors = True

[mypy-tests/data/generator/t_protocol_no_ct/*]
ignore_errors = True

[mypy-tests/data/dummy_aea/vendor/*]
ignore_errors = True

[mypy-mistune]
ignore_missing_imports = True

[mypy-git.*]
ignore_missing_imports = True

# Per-module options for packages dir:

[mypy-packages/fetchai/protocols/acn/acn_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/aggregation/aggregation_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/aggregation/dialogues]
ignore_errors = True

[mypy-packages/fetchai/protocols/contract_api/contract_api_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/default/default_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/fipa/fipa_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/gym/gym_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/http/http_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/ledger_api/ledger_api_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/ml_trade/ml_trade_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/prometheus/prometheus_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/oef_search/oef_search_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/signing/signing_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/state_update/state_update_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/tac/tac_pb2]
ignore_errors = True

[mypy-packages/fetchai/protocols/register/register_pb2]
ignore_errors = True

[mypy-tensorflow.*]
ignore_missing_imports = True

[mypy-temper.*]
ignore_missing_imports = True

[mypy-openapi_core.*]
ignore_missing_imports = True

[mypy-openapi_spec_validator.*]
ignore_missing_imports = True

[mypy-sqlalchemy]
ignore_missing_imports = True

[mypy-defusedxml.*]
ignore_missing_imports = True

[mypy-packages/fetchai/protocols/yoti/yoti_pb2]
ignore_errors = True

[darglint]
docstring_style=sphinx
strictness=short
ignore_regex=.*_pb2\.py
ignore=DAR401
